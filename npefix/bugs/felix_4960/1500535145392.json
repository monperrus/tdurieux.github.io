{"executions":[{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535127222,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"m_declaredCaps","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,11 +536,27 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n-                {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+            } else {\n+                if (contentPath == null) {\n+                    for (int i = 0; i < m_declaredCaps.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n+                } else {\n+                    for (int i = 0; i < contentPath.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":17266,"line":537,"executionCount":0,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"}],"startDate":1500535106113},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535143106,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"l","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,11 +536,27 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n-                {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+            } else {\n+                if (contentPath == null) {\n+                    for (int i = 0; i < l.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n+                } else {\n+                    for (int i = 0; i < contentPath.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":17266,"line":537,"executionCount":0,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"}],"startDate":1500535137359},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144282,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"m_declaredReqs","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,11 +536,27 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n-                {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+            } else {\n+                if (contentPath == null) {\n+                    for (int i = 0; i < m_declaredReqs.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n+                } else {\n+                    for (int i = 0; i < contentPath.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":17266,"line":537,"executionCount":0,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"}],"startDate":1500535143106},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:1393)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:39)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144310,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"m_declaredCaps","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,3 +536,7 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n+            } else {\n+                if (contentPath == null) {\n+                    contentPath = m_declaredCaps;\n+                }\n+                for (int i = 0; i < contentPath.size(); i++)\n             {\n@@ -547,2 +551,3 @@\n             }\n+            }\n         }\n","startDate":1500535144282},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:1393)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:39)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144359,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"l","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,3 +536,7 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n+            } else {\n+                if (contentPath == null) {\n+                    contentPath = l;\n+                }\n+                for (int i = 0; i < contentPath.size(); i++)\n             {\n@@ -547,2 +551,3 @@\n             }\n+            }\n         }\n","startDate":1500535144310},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:1393)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:39)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144406,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"m_declaredReqs","instanceType":"Variable"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,3 +536,7 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n+            } else {\n+                if (contentPath == null) {\n+                    contentPath = m_declaredReqs;\n+                }\n+                for (int i = 0; i < contentPath.size(); i++)\n             {\n@@ -547,2 +551,3 @@\n             }\n+            }\n         }\n","startDate":1500535144359},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144441,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,11 +536,27 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n-                {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+            } else {\n+                if (contentPath == null) {\n+                    for (int i = 0; i < new ArrayList().size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n+                } else {\n+                    for (int i = 0; i < contentPath.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":17266,"line":537,"executionCount":0,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"}],"startDate":1500535144407},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:1393)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:39)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144475,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,3 +536,7 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n+            } else {\n+                if (contentPath == null) {\n+                    contentPath = new ArrayList();\n+                }\n+                for (int i = 0; i < contentPath.size(); i++)\n             {\n@@ -547,2 +551,3 @@\n             }\n+            }\n         }\n","startDate":1500535144441},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:1393)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:39)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144508,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,11 +536,15 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n-                {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+            } else {\n+                if (contentPath != null) {\n+                    for (int i = 0; i < contentPath.size(); i++)\n+                    {\n+                        if (contentPath.get(i).hasEntry(name))\n+                        {\n+                            // Use the class path index + 1 for creating the path so\n+                            // that we can differentiate between module content URLs\n+                            // (where the path will start with 0) and module class\n+                            // path URLs.\n+                            l.add(createURL(i + 1, name));\n+                        }\n+                    }\n                 }\n","startDate":1500535144476},{"result":{"success":false,"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:40)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:88)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:214)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:226)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:202)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:162)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"endDate":1500535144532,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /BundleRevisionImpl.java\n+++ /BundleRevisionImpl.java\n@@ -536,3 +536,7 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n+            } else {\n+                if (contentPath == null) {\n+                    return null;\n+                }\n+                for (int i = 0; i < contentPath.size(); i++)\n             {\n@@ -547,2 +551,3 @@\n             }\n+            }\n         }\n","locations":[{"sourceEnd":17266,"line":537,"executionCount":0,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"}],"startDate":1500535144509}],"endInit":1500535100191,"start":1500535106094,"end":1500535144968,"searchSpace":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"m_declaredCaps","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat1A","value":{"variableName":"l","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat1A","value":{"variableName":"m_declaredReqs","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"m_declaredCaps","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"l","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"m_declaredReqs","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.util.ArrayList"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.util.ArrayList"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":17266,"line":537,"sourceStart":17256,"class":"org.apache.felix.framework.BundleRevisionImpl"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}]}