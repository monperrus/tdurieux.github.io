(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{255:function(e,r,t){"use strict";t.r(r);var a=t(2),n=Object(a.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"an-analysis-of-35-million-jobs-of-travis-ci"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-analysis-of-35-million-jobs-of-travis-ci","aria-hidden":"true"}},[e._v("#")]),e._v(" An Analysis of 35+ Million Jobs of Travis CI")]),e._v(" "),t("p",[e._v("Proceedings of the 35th IEEE International Conference on Software Maintenance and Evolution, Short Papers track ("),t("em",[e._v("ICSME'19")]),e._v(")")]),e._v(" "),e._l(this.$page.frontmatter.authors,function(e){return t("Author",{key:e.lastname,attrs:{lastname:e.lastname,firstname:e.firstname,url:e.url}})}),e._v(" "),e._v(" "),t("p",[t("a",{attrs:{href:"https://arxiv.org/abs/1905.11973",target:"_blank",rel:"noopener noreferrer"}},[e._v("PDF"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://doi.org/10.1145/3338906.3338911",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOI"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://durieux.me/slide_35m_travis_jobs.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slide"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://github.com/tdurieux/travis-collector",target:"_blank",rel:"noopener noreferrer"}},[e._v("Source code"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://zenodo.org/record/2560966",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dataset"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"abstract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abstract","aria-hidden":"true"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),t("p",[e._v("In the past decade, research on test-suite-based automatic program repair has grown significantly. Each year, new approaches and implementations are featured in major software engineering venues. However, most of those approaches are evaluated on a single benchmark of bugs, which are also rarely reproduced by other researchers. In this paper, we present a large-scale experiment using 11 Java test-suite-based repair tools and 5 benchmarks of bugs. Our goal is to have a better understanding of the current state of automatic program repair tools on a large diversity of benchmarks. Our investigation is guided by the hypothesis that the repairability of repair tools might not be generalized across different benchmarks of bugs. We found that the 11 tools 1) are able to generate patches for 21% of the bugs from the 5 benchmarks, and 2) have better performance on Defects4J compared to other benchmarks, by generating patches for 47% of the bugs from Defects4J compared to 10-30% of bugs from the other benchmarks. Our experiment comprises 23,551 repair attempts in total, which we used to find the causes of non-patch generation. These causes are reported in this paper, which can help repair tool designers to improve their techniques and tools.")]),e._v(" "),t("div",{staticClass:"language-bibtex extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@inproceedings{DBLP:conf/icsm/DurieuxAMB019,\nauthor = {Thomas Durieux and\nRui Abreu and\nMartin Monperrus and\nTegawend{\\'{e}} F. Bissyand{\\'{e}} and\nLuis Cruz},\ntitle = {An Analysis of 35+ Million Jobs of Travis {CI}},\nbooktitle = {2019 {IEEE} International Conference on Software Maintenance and Evolution,\n{ICSME} 2019, Cleveland, OH, USA, September 29 - October 4, 2019},\npages = {291--295},\npublisher = {{IEEE}},\nyear = {2019},\nurl = { https://doi.org/10.1109/ICSME.2019.00044 },\ndoi = {10.1109/ICSME.2019.00044},\ntimestamp = {Tue, 13 Apr 2021 13:32:36 +0200},\nbiburl = { https://dblp.org/rec/conf/icsm/DurieuxAMB019.bib },\nbibsource = {dblp computer science bibliography,  https://dblp.org }\n}\n")])])])],2)},[],!1,null,null,null);r.default=n.exports}}]);